{"ast":null,"code":"var _jsxFileName = \"/Users/jamestucker/Personal Projects/teach_yourself_code/components/SignInScreen.jsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase\"; // Configure Firebase.\n\nconst config = {\n  apiKey: \"AIzaSyAKfflzr482_jI6-kogqdGl_g7E368lfXQ\",\n  authDomain: \"teach-yourself-code.firebaseapp.com\",\n  databaseURL: \"https://teach-yourself-code.firebaseio.com\",\n  projectId: \"teach-yourself-code\",\n  storageBucket: \"teach-yourself-code.appspot.com\",\n  messagingSenderId: \"681808673288\",\n  appId: \"1:681808673288:web:a7ee723223e69862642fbd\",\n  measurementId: \"G-JZV45JRTL1\"\n};\nfirebase.initializeApp(config); // Configure FirebaseUI.\n\nconst uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: \"popup\",\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n  signInSuccessUrl: \"/signedIn\",\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.FacebookAuthProvider.PROVIDER_ID]\n};\n\nclass SignInScreen extends React.Component {\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"My App\"), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Please sign-in:\"), __jsx(StyledFirebaseAuth, {\n      uiConfig: uiConfig,\n      firebaseAuth: firebase.auth(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SignInScreen;","map":{"version":3,"sources":["/Users/jamestucker/Personal Projects/teach_yourself_code/components/SignInScreen.jsx"],"names":["React","StyledFirebaseAuth","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","uiConfig","signInFlow","signInSuccessUrl","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","SignInScreen","Component","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAEA;;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,qCAFC;AAGbC,EAAAA,WAAW,EAAE,4CAHA;AAIbC,EAAAA,SAAS,EAAE,qBAJE;AAKbC,EAAAA,aAAa,EAAE,iCALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB,E,CAEA;;AACA,MAAMU,QAAQ,GAAG;AACf;AACAC,EAAAA,UAAU,EAAE,OAFG;AAGf;AACAC,EAAAA,gBAAgB,EAAE,WAJH;AAKf;AACAC,EAAAA,aAAa,EAAE,CACbd,QAAQ,CAACe,IAAT,CAAcC,kBAAd,CAAiCC,WADpB,EAEbjB,QAAQ,CAACe,IAAT,CAAcG,oBAAd,CAAmCD,WAFtB;AANA,CAAjB;;AAYA,MAAME,YAAN,SAA2BrB,KAAK,CAACsB,SAAjC,CAA2C;AACzCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,EAGE,MAAC,kBAAD;AACE,MAAA,QAAQ,EAAEV,QADZ;AAEE,MAAA,YAAY,EAAEX,QAAQ,CAACe,IAAT,EAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAUD;;AAZwC;;AAe3C,eAAeI,YAAf","sourcesContent":["import React from \"react\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase\";\n\n// Configure Firebase.\nconst config = {\n  apiKey: \"AIzaSyAKfflzr482_jI6-kogqdGl_g7E368lfXQ\",\n  authDomain: \"teach-yourself-code.firebaseapp.com\",\n  databaseURL: \"https://teach-yourself-code.firebaseio.com\",\n  projectId: \"teach-yourself-code\",\n  storageBucket: \"teach-yourself-code.appspot.com\",\n  messagingSenderId: \"681808673288\",\n  appId: \"1:681808673288:web:a7ee723223e69862642fbd\",\n  measurementId: \"G-JZV45JRTL1\"\n};\n\nfirebase.initializeApp(config);\n\n// Configure FirebaseUI.\nconst uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: \"popup\",\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n  signInSuccessUrl: \"/signedIn\",\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID\n  ]\n};\n\nclass SignInScreen extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>My App</h1>\n        <p>Please sign-in:</p>\n        <StyledFirebaseAuth\n          uiConfig={uiConfig}\n          firebaseAuth={firebase.auth()}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SignInScreen;\n"]},"metadata":{},"sourceType":"module"}